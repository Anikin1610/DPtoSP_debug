//
// Generated by Bluespec Compiler (build 65170db5)
//
// On Thu Jul  8 20:55:53 IST 2021
//
//
// Ports:
// Name                         I/O  size props
// oout                           O    33
// oexceptionFlags                O     5
// RDY_oexceptionFlags            O     1 const
// CLK                            I     1 unused
// RST_N                          I     1 unused
// request_control                I     1
// request_roundingmode           I     3
// request_in                     I    65
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkRecToRec_instance(CLK,
			   RST_N,

			   oout,

			   oexceptionFlags,
			   RDY_oexceptionFlags,

			   request_control,
			   request_roundingmode,
			   request_in);
  input  CLK;
  input  RST_N;

  // value method oout
  output [32 : 0] oout;

  // value method oexceptionFlags
  output [4 : 0] oexceptionFlags;
  output RDY_oexceptionFlags;

  // action method request
  input  request_control;
  input  [2 : 0] request_roundingmode;
  input  [64 : 0] request_in;

  // signals for module outputs
  wire [32 : 0] oout;
  wire [4 : 0] oexceptionFlags;
  wire RDY_oexceptionFlags;

  // ports of submodule recTorec
  wire [64 : 0] recTorec$in;
  wire [32 : 0] recTorec$out;
  wire [4 : 0] recTorec$exceptionFlags;
  wire [2 : 0] recTorec$roundingMode;
  wire recTorec$control;

  // rule scheduling signals
  wire CAN_FIRE_request, WILL_FIRE_request;

  // value method oout
  assign oout = recTorec$out ;

  // value method oexceptionFlags
  assign oexceptionFlags = recTorec$exceptionFlags ;
  assign RDY_oexceptionFlags = 1'd1 ;

  // action method request
  assign CAN_FIRE_request = 1'd1 ;
  assign WILL_FIRE_request = 1'd1 ;

  // submodule recTorec
  recFNToRecFN #(.inExpWidth(32'd11),
		 .inSigWidth(32'sd53),
		 .outExpWidth(32'sd8),
		 .outSigWidth(32'sd24)) recTorec(.control(recTorec$control),
						.in(recTorec$in),
						.roundingMode(recTorec$roundingMode),
						.out(recTorec$out),
						.exceptionFlags(recTorec$exceptionFlags));

  // submodule recTorec
  assign recTorec$control = request_control ;
  assign recTorec$in = request_in ;
  assign recTorec$roundingMode = request_roundingmode ;
endmodule  // mkRecToRec_instance

